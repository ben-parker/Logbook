// <auto-generated />
using System;
using Logbook.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Logbook.Migrations
{
    [DbContext(typeof(LogbookDBContext))]
    [Migration("20180906235746_NullableCategory")]
    partial class NullableCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Logbook.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("Public");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Logbook.Models.Occurrence", b =>
                {
                    b.Property<int>("OccurrenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedDate");

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("TrackedId");

                    b.HasKey("OccurrenceId");

                    b.HasIndex("TrackedId");

                    b.ToTable("Occurrences");
                });

            modelBuilder.Entity("Logbook.Models.Tracked", b =>
                {
                    b.Property<int>("TrackedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<bool>("MarkDone");

                    b.Property<bool>("Remind");

                    b.Property<bool>("Repeat");

                    b.HasKey("TrackedId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tracked");
                });

            modelBuilder.Entity("Logbook.Models.Occurrence", b =>
                {
                    b.HasOne("Logbook.Models.Tracked", "Tracked")
                        .WithMany()
                        .HasForeignKey("TrackedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Logbook.Models.Tracked", b =>
                {
                    b.HasOne("Logbook.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
